{"version":3,"sources":["styles/styledComponents.js","components/Home.js","utils/resultContent.js","components/game/Result.js","utils/questionContent.js","components/game/Question.js","components/Game.js","App.js","index.js"],"names":["Button","styled","button","Title","div","homeContainer","textAlign","Home","props","style","width","height","src","onClick","this","goTest","React","Component","resultContent","type","description","character","imageSrc","Result","state","result","content","points","e","s","t","j","forEach","rc","setState","fontSize","color","goFirst","questionContent","number","question","answer1","answer2","Question","count","selectAnswer","gameContainer","Game","btnNum","container","display","justifyContent","alignItems","App","begin","Fade","bottm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dbd152d.chunk.js","sourcesContent":["/*\r\n재활용 할 수 있는 버튼 만들어서 갖다쓰기\r\n+\r\n홈 화면에 필요한 스타일\r\n*/\r\nimport styled from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n    width: 200px; height: 40px;\r\n    font-size: 18px;\r\n    border-radius: 20px; border: none;\r\n    color: white;\r\n    background-color: #5CD1E5;\r\n    margin: 20px; \r\n    &:active{\r\n        outline: none;\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    &:hover{\r\n        background-color: #489CFF;\r\n    }\r\n    font-family: 'MaplestoryOTFBold';\r\n`\r\n\r\n// 제목이 적절한 위치에 배치되도록 최소높이 지정한!\r\nexport const Title = styled.div`\r\n    font-size: 24px;\r\n    min-height: 150px;\r\n`\r\n","/*\r\n시작화면, 사용자에게 시작을 유도하고\r\n퀴즈에 대해 소개하는 화면\r\n*/\r\n\r\nimport React from 'react'\r\nimport { Button, Title} from '../styles/styledComponents'\r\n\r\nconst homeContainer = {\r\n  textAlign: \"center\"\r\n}\r\n\r\nclass Home extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    return <div style={homeContainer}>\r\n      <img style={{width: 500, height: 300}} src=\"images/school.jpg\"></img>\r\n      <Title><h1>MBTI 유형별 나에게 맞는 학과는?!</h1></Title>\r\n      <Button onClick={this.props.goTest}>시작하기</Button>\r\n      <p>MADE BY 송명수</p>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Home;","/*\r\n16가지 결과에 대한 정보가 모여있는 배열\r\n*/\r\nexport const resultContent = [\r\n    {\r\n        type: \"ENFJ\",\r\n        description: \"넘치는 카리스마로 청중을 압도하는 리더형. 리더싶이 높아 타인에게 관심이 많으며 본보기가 되고 싶어함.\",\r\n        character: \"사회학과\",\r\n        imageSrc: \"images/ENFJ.png\"\r\n    },{\r\n        type: \"ENTJ\",\r\n        description: \"대담하며, 성취를 통해서 행복을 느끼는 타고난 통솔자의 성격. 진취적이며 냉절한 판단력 겸비.\",\r\n        character: \"경제학과\",\r\n        imageSrc: \"images/ENTJ.png\"\r\n    },{\r\n        type: \"ESTJ\",\r\n        description: \"관리하는데 뛰어난 실력을 갖춘 관리자형. 엄격하고 명확한 성격.\",\r\n        character: \"경영학과\",\r\n        imageSrc: \"images/ESTJ.png\"\r\n    },{\r\n        type: \"ESFJ\",\r\n        description: \"타인을 향한 세심한 관심과 사교적인 성향. 다른 유형들보다 훨씬 유연한 인간관계 형성.\",\r\n        character: \"항공서비스과\",\r\n        imageSrc: \"images/ESFJ.png\"\r\n    },{\r\n        type: \"ESTP\",\r\n        description: \"명석한 두뇌와 에너지 및 뛰어난 직관력이 있는 사업가형. 문제 발생 시 직접 몸으로 부딪혀 해결 하려는 성향.\",\r\n        character: \"체육학과\",\r\n        imageSrc: \"images/ESTP.png\"\r\n    },{\r\n        type: \"ESFP\",\r\n        description: \"즉흥적이며 열정과 에너지가 넘치는 연예인형. 스타성과 사교성, 따듯함을 가지고 있음.\",\r\n        character: \"실용음악과\",\r\n        imageSrc: \"images/ESFP.png\"\r\n    },{\r\n        type: \"ENFP\",\r\n        description: \"활발한 성격으로 사람들과 어울리는 것을 좋아하는 유형. 안정된 삶보다 다양한 즐거움을 추구.\",\r\n        character: \"연극영화과\",\r\n        imageSrc: \"images/ENFP.png\"\r\n    },{\r\n        type: \"ENTP\",\r\n        description: \"약자의 입장에서 다수가 받아들인 사안에 의문을 제기함으로 희열을 느끼는 유형.\",\r\n        character: \"법학과\",\r\n        imageSrc: \"images/ENTP.png\"\r\n    },{\r\n        type: \"ISTP\",\r\n        description: \"도구사용에 능숙한 탐험형. 내성적이지만 도와주는 걸 좋아하고 실용적이며, 도전적인 성향.\",\r\n        character: \"소방안전학과\",\r\n        imageSrc: \"images/ISTP.png\"\r\n    },{\r\n        type: \"ISFP\",\r\n        description: \"융통성 있는 성격의 매력 넘치는 예술가형. 창의적인 아이디어를 다양한 방식으로 표출.\",\r\n        character: \"미용학과\",\r\n        imageSrc: \"images/ISFP.png\"\r\n    },{\r\n        type: \"INFP\",\r\n        description: \"다른 유형과의 소통을 깊게하고 이해하는 성형. 언어적으로 강하고 즐거움과 영감을 추구.\",\r\n        character: \"문예창작과\",\r\n        imageSrc: \"images/INFP.png\"\r\n    },{\r\n        type: \"INTP\",\r\n        description: \"연구를 통한 삶을 좋아하고, 호기심이 많은 유형. 모든 일에 논리적으로 접근하기를 좋아함.\",\r\n        character: \"철학과\",\r\n        imageSrc: \"images/INTP.png\"\r\n    },{\r\n        type: \"ISTJ\",\r\n        description: \"사실에 근거하여 사고하는 정확한 성격. 집중력이 좋고 이해도가 높음.\",\r\n        character: \"행정학과\",\r\n        imageSrc: \"images/ISTJ.png\"\r\n    },{\r\n        type: \"ISFJ\",\r\n        description: \"신중함, 규칙적, 인내심이 특징. 헌신적이고 세심한 성격.\",\r\n        character: \"유아교육과\",\r\n        imageSrc: \"images/ISFJ.png\"\r\n    },{\r\n        type: \"INFJ\",\r\n        description: \"통찰력, 계획표성애자. 타인의 감정에 민감한 편이고, 세심하게 위로 해주는 성격.\",\r\n        character: \"심리학과\",\r\n        imageSrc: \"images/INFJ.png\"\r\n    },{\r\n        type: \"INTJ\",\r\n        description: \"논리적 분석, 회로 설계, 기기조립에 딱 맞는 성격.\",\r\n        character: \"기계과\",\r\n        imageSrc: \"images/INTJ.png\"\r\n    }\r\n]","/*\r\n질문을 끝내고 결과를 산출하여 보여주는 컴포넌트\r\n*/\r\nimport React from 'react'\r\nimport { Button, Title } from '../../styles/styledComponents'\r\n\r\n// 결과 내용 들어있는 배열 가져다 놓기\r\nimport { resultContent } from '../../utils/resultContent'\r\n\r\nclass Result extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    // result : 성향 파악 후 알려주기 위한 상태값\r\n    // content : 배열에서 결과 하나만 쏙 빼서 저장할 상태값\r\n    this.state = { result : \"\", content: {} }\r\n  }\r\n\r\n  // 넘어온 속성들을 가지고 성향 결론짓기!\r\n  componentDidMount(){\r\n    const { e, s, t, j } = this.props.points\r\n    let result = \"\" // 계산 결과 누산할 임시 변수\r\n    result += e > 0 ? \"E\" : \"I\"\r\n    result += s > 0 ? \"S\" : \"N\"\r\n    result += t > 0 ? \"T\" : \"F\"\r\n    result += j > 0 ? \"J\" : \"P\"\r\n\r\n    let content; // 성향에 해당하는 결과 객체 하나만 임시 저장할 변수\r\n    // forEach(콜백함수) : 요소 수만큼 콜백함수 호출하는 메소드!!\r\n    resultContent.forEach(rc => {\r\n      if(rc.type == result){\r\n        content = rc; // 일치하는 성향의 객체를 임시 저장!\r\n      }\r\n    })\r\n\r\n    this.setState({ result: result, content: content })\r\n  }\r\n\r\n  render(){\r\n    const { content } = this.state // 콘텐츠만 뽑는 구조분해!\r\n    return <div>\r\n      <Title>\r\n        <h2>당신의 성향은 {this.state.result}</h2>\r\n        <img src={content.imageSrc} />\r\n        <h2>당신에게 맞는 학과는 <span style={{fontSize:50, color:\"blue\"}}>{content.character}</span></h2>\r\n        <p>{content.description}</p>\r\n      </Title>\r\n      <Button onClick={this.props.goFirst} >다시하기</Button>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","/* \r\n12개의 질문에 대한 데이터를 보관하는 배열!\r\n*/\r\nexport const questionContent = [\r\n    { \r\n      number: 1,\r\n      question: \"주말이면 집에있는것보다 어딘가 나가야한다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"e\"\r\n    },{\r\n      number: 2,\r\n      question: \"새로운 맛집을 찾아 다니는것이 매우 즐겁다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"e\"\r\n    },{\r\n      number: 3,\r\n      question: \"금방 새로운 직장 사람들과 잘 어울린다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"e\"\r\n    },{\r\n      number: 4,\r\n      question: \"늦잠을 자서 지각을 할 것 같을 때 어차피 늦은거 천천히 준비하고 나간다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"s\"\r\n    },{\r\n      number: 5,\r\n      question: \"노트 필기는 깔끔하고 꼼꼼하게 해두어야 한다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"s\"\r\n    },{\r\n      number: 6,\r\n      question: \"불합리한 것을 보면 참지 못하고 따져서 고쳐야 직성이 풀린다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"s\"\r\n    },{\r\n      number: 7,\r\n      question: \"인터넷 쇼핑시 최저가로 사지않으면 마음이 불편하다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"t\"\r\n    },{\r\n      number: 8,\r\n      question: \"친구들의 연애상담을 많이 해주는편이다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"t\"\r\n    },{\r\n      number: 9,\r\n      question: \"주변 사람들이 나를 고지식하다고 한다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"t\"\r\n    },{\r\n      number: 10,\r\n      question: \"계획을 철저하게 짜는 편이다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"j\"\r\n    },{\r\n      number: 11,\r\n      question: \"바퀴벌레가 나오면 누군가 잡아줄 사람을 찾는다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"j\"\r\n    },{\r\n      number: 12,\r\n      question: \"나는 한꺼번에 여러 일을 하는것을 좋아한다\",\r\n      answer1 : \"예\",\r\n      answer2 : \"아니오\",\r\n      type: \"j\"\r\n    }\r\n]","/*\r\n사용자에게 질문을 던지는 컴포넌트\r\n*/\r\nimport React from 'react'\r\nimport { Button, Title } from '../../styles/styledComponents'\r\nimport { questionContent } from '../../utils/questionContent'\r\n\r\nclass Question extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    return <div>\r\n        <Title>\r\n            <h3>{this.props.count + 1}</h3>\r\n            <h2>{questionContent[this.props.count].question}</h2>\r\n        </Title>\r\n        <Button onClick={() => this.props.selectAnswer(1, questionContent[this.props.count].type)}>\r\n          {questionContent[this.props.count].answer1}\r\n        </Button><br />\r\n        <Button onClick={() => this.props.selectAnswer(2, questionContent[this.props.count].type)}>\r\n          {questionContent[this.props.count].answer2}\r\n        </Button>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Question;","/*\r\n퀴즈를 진행하고, 결과를 보여주는\r\n나름의 게임(?) 부분을 담당하는 컴포넌트\r\n*/\r\nimport React from 'react'\r\nimport Result from './game/Result'\r\nimport Question from './game/Question';\r\n\r\n// 총 질문 수\r\nconst NUMBER_OF_QUESTION = 12;\r\nconst gameContainer = {\r\n  textAlign: \"center\"\r\n}\r\n\r\nclass Game extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    // count : 대답을 들은 질문 수\r\n    // e, s, t, j : 각 타입의 점수를 누산할 상태\r\n    // 1번을 누르면 양수, 2번을 누르면 음수\r\n    this.state = {\r\n        count: 0,\r\n        e:0, s:0, t:0, j:0\r\n    }\r\n  }\r\n\r\n  // 질문 하나 대답하면 넘어가기\r\n  // btnNum : 1번눌렀냐(+), 2번눌렀냐(-)\r\n  // type : e, s, t, j 중 뭐에 대한 문제였냐\r\n  selectAnswer = (btnNum, type) => {\r\n    if(btnNum == 1){\r\n      if(type == 'e'){ this.setState({ e: this.state.e + 1, count: this.state.count + 1 }) }\r\n      if(type == 's'){ this.setState({ s: this.state.s + 1, count: this.state.count + 1 }) }\r\n      if(type == 't'){ this.setState({ t: this.state.t + 1, count: this.state.count + 1 }) }\r\n      if(type == 'j'){ this.setState({ j: this.state.j + 1, count: this.state.count + 1 }) }\r\n    }else {\r\n      if(type == 'e'){ this.setState({ e: this.state.e - 1, count: this.state.count + 1 }) }\r\n      if(type == 's'){ this.setState({ s: this.state.s - 1, count: this.state.count + 1 }) }\r\n      if(type == 't'){ this.setState({ t: this.state.t - 1, count: this.state.count + 1 }) }\r\n      if(type == 'j'){ this.setState({ j: this.state.j - 1, count: this.state.count + 1 }) }\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n\r\n    // Result 에다 e,s,t,j 를 넘겨주기 위해 구조분해!\r\n    const { e, s, t, j} = this.state\r\n    return <div style={gameContainer}>\r\n      {\r\n        this.state.count == NUMBER_OF_QUESTION ? \r\n        <Result goFirst={this.props.goFirst} points={{ e, s, t, j }} /> : \r\n        <Question count={this.state.count} \r\n        selectAnswer={this.selectAnswer} />\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Game;","/*\n  App.js\n\n  루트 컴포넌트로써, 시작화면, 질문화면, 결과화면을 모두\n  품어주는 역할!\n\n*/\nimport React from 'react'\nimport Home from './components/Home'\nimport Game from './components/Game'\nimport Fade from 'react-reveal/Fade'\n\nconst container = {\n  height: \"100vh\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n}\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    // 사용자가 시작했는지 여부를 나타태는 상태\n    this.state = {\n      begin: false,\n      Fade: false\n    }\n  }\n\n  // 이 컴포넌트의 상태 begin을 바꿀 수 있는 메소드\n  goTest = () => { this.setState({ begin: true }) }\n  goFirst = () => { this.setState({ begin: false }) }\n\n  render(){\n    return <div style={container}>\n      <Fade bottm>\n      {\n        this.state.begin ? <Game goFirst={this.goFirst} /> :\n        <Home goTest={this.goTest} />\n      }\n      </Fade>\n    </div>\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}